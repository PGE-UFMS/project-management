name: Set status to Product Backlog

on:
  issues:
    types: [opened]

jobs:
  set-status:
    runs-on: ubuntu-latest
    steps:
      - name: Set status in GitHub Project
        uses: actions/github-script@v7
        env:
          ORG_NAME: ${{ secrets.ORG_NAME }}
        with:
          github-token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          script: |
            const org = process.env.ORG_NAME;
            const projectNumber = 2; // Product Backlog
            const issueId = context.payload.issue.node_id;

            // 1. Buscar informações do projeto
            const projectQuery = `
              query {
                organization(login: "${org}") {
                  projectV2(number: ${projectNumber}) {
                    id
                    fields(first: 100) {
                      nodes {
                        ... on ProjectV2FieldCommon {
                          id
                          name
                        }
                      }
                    }
                  }
                }
              }
            `;

            const result = await github.graphql(projectQuery);
            const project = result.organization.projectV2;
            const statusField = project.fields.nodes.find(f => f.name === "Status");

            // 2. Adicionar a issue ao projeto
            const addItemMutation = `
              mutation($projectId: ID!, $contentId: ID!) {
                addProjectV2ItemById(input: {projectId: $projectId, contentId: $contentId}) {
                  item {
                    id
                  }
                }
              }
            `;

            const itemResult = await github.graphql(addItemMutation, {
              projectId: project.id,
              contentId: issueId
            });

            const itemId = itemResult.addProjectV2ItemById.item.id;

            // 3. Esperar alguns segundos para garantir que os campos estejam prontos
            await new Promise(resolve => setTimeout(resolve, 3000));

            // 4. Definir o status como "Product Backlog" (ID já conhecido)
            const setStatusMutation = `
              mutation($projectId: ID!, $itemId: ID!, $fieldId: ID!, $optionId: String!) {
                updateProjectV2ItemFieldValue(input: {
                  projectId: $projectId,
                  itemId: $itemId,
                  fieldId: $fieldId,
                  value: {
                    singleSelectOptionId: $optionId
                  }
                }) {
                  projectV2Item {
                    id
                  }
                }
              }
            `;

            await github.graphql(setStatusMutation, {
              projectId: project.id,
              itemId,
              fieldId: statusField.id,
              optionId: "f75ad846" // ID da opção "Product Backlog"
            });